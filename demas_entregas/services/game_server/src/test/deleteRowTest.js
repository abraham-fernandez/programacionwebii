const assert = require("assert");
const {move }=require('../services/tetris.js')
const { expect } = require("chai");
describe("delete row", () => {
    describe("Comprobar que al estar una fila llena se borra", () => {
        it("Debe borrar tantas lienas como llenas haya", () => {
            const tableroActual = [['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '1', '1', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '1', '1', '0', '0', '0', '0', '0', '0', '0'],
                ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1'],
                ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1']];
            const tableroexpected = [['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                                    ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                                    ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                                    ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                                    ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                                    ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                                    ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                                    ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                                    ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                                    ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                                    ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                                    ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                                    ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                                    ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                                    ['0', '1', '1', '0', '0', '0', '0', '0', '0', '0'],
                                    ['0', '1', '1', '0', '0', '0', '0', '0', '0', '0']];
            const position = [{"y": 14, "x": 8}, {"y": 14, "x": 9}, {"y": 15, "x": 8}, {"y": 15, "x": 9}];
            let req = {}
            req.position = position
            req.board = tableroActual
            req.direction = "down"
            const {board} = move(req)
            expect(tableroexpected).to.deep.equal(board);

        })

    })
})


