const assert = require("assert");
const {move }=require('../services/tetris.js')
const { expect } = require("chai");
describe("moveDown piece", () => {
    describe("Comprobar que la pieza baje ", () => {
        it("Debe bajar el cuadrado a la segunda fila", () => {
            const tableroActual = [['1', '1', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['1', '1', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0']];
            const tableroexpected = [['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['1', '1', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['1', '1', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0']];
            const position = [{"y": 0, "x": 0}, {"y": 0, "x": 1}, {"y": 1, "x": 0}, {"y": 1, "x": 1}];
            let req = {}
            req.position = position
            req.board = tableroActual
            req.direction = "down"
            const {board} = move(req)

            expect(tableroexpected).to.deep.equal(board);

        })

    })
})


describe("moveDown piece", () => {
    describe("Comprobar que la pieza baje ", () => {
        it("Debe bajar pieza(I) la ultima fila", () => {
            const tableroActual = [['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['1', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['1', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['1', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['1', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0']];
            const tableroexpected = [['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['1', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['1', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['1', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['1', '0', '0', '0', '0', '0', '0', '0', '0', '0']];
            const position = [ { y: 11, x: 0 },{ y: 12, x: 0 },{ y: 13, x: 0 }, { y: 14, x: 0 } ]
            let req = {}
            req.position = position
            req.board = tableroActual
            req.direction = "down"
            const {board} = move(req)

            expect(tableroexpected).to.deep.equal(board);

        })
    })
})



describe("moveDown piece", () => {
    describe("Comprobar que la pieza baje ", () => {
        it("Debe bajar pieza(I) baje y pare al chocar", () => {
            const tableroActual = [['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '1', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '1', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['1', '1', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['1', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['1', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['1', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['1', '0', '0', '0', '0', '0', '0', '0', '0', '0']];
            const tableroexpected = [['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '1', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['0', '1', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['1', '1', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['1', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['1', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['1', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
                ['1', '0', '0', '0', '0', '0', '0', '0', '0', '0']];
            const position = [ { y: 8, x: 1 },{ y: 9, x: 1 },{ y: 10, x: 0 },{ y: 10, x: 1 } ]
            let req = {}
            req.position = position
            req.board = tableroActual
            req.direction = "down"
            const {board} = move(req)
            expect(tableroexpected).to.deep.equal(board);

        })
    })
})



